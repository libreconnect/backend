name: CI/CD

on:
  push:
    branches:
      - main
    tags-ignore:
      - '*'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9
          run_install: false
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.14.0'
      - name: Install dependencies
        run: pnpm install
      - name: Run linter
        run: pnpm run lint
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: libreconnect_api_test
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9
          run_install: false
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.14.0'
      - name: Install dependencies
        run: pnpm install
      - name: Wait for Postgres
        run: sleep 10
      - name: Run tests
        run: pnpm run test
  build-and-push:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Extract short SHA
        id: vars
        run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Login to container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}
          username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.CONTAINER_REGISTRY_TOKEN }}
      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/backend:${{ env.sha }}
